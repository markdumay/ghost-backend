version: "3.7"

networks:
    backend:
    frontend:
        external:
            name: nginx-certbot_portal

volumes:
    mariadb_data:
    templates:
        external:
            name: nginx-certbot_templates

secrets:
    db_root_password:
        file: secrets/db_root_password
    db_user:
        file: secrets/db_user
    db_password:
        file: secrets/db_password
    db_backup_user:
        file: secrets/db_backup_user
    db_backup_password:
        file: secrets/db_backup_password
    restic_password:
        file: secrets/restic_password
    STAGE_B2_ACCOUNT_ID:
        file: secrets/STAGE_B2_ACCOUNT_ID
    STAGE_B2_ACCOUNT_KEY:
        file: secrets/STAGE_B2_ACCOUNT_KEY


services:
    mariadb:
        image: "markdumay/mariadb:latest"
        hostname: mariadb
        command: --max_allowed_packet=256M
        restart: unless-stopped
        networks:
            - backend
        volumes:
            # make mariadb database data, backups, and logs persistent
            - mariadb_data:/var/lib/mysql
            # - ./data/mariadb/mysql:/var/lib/mysql
            - ./data/mariadb/backup:/var/backup/mariadb
            - ./data/mariadb/log:/var/log
            # cross-reference Ghost images, logs, settings, and themes for remote backup
            - ./data/ghost:/var/backup/ghost
            # add folder with initialization script to create backup database user and password
            - ./config/mariadb/init:/docker-entrypoint-initdb.d:ro
        environment:
            # database settings
            - MYSQL_DATABASE=${DB_NAME}
            - MYSQL_ROOT_PASSWORD_FILE=/run/secrets/db_root_password
            - MYSQL_USER_FILE=/run/secrets/db_user
            - MYSQL_PASSWORD_FILE=/run/secrets/db_password
            - MYSQL_BACKUP_USER_FILE=/run/secrets/db_backup_user
            - MYSQL_BACKUP_PASSWORD_FILE=/run/secrets/db_backup_password
            # backup settings
            - BACKUP=${BACKUP}
            - RESTIC_REPOSITORY=${RESTIC_REPOSITORY}
            - RESTIC_PASSWORD_FILE=/run/secrets/restic_password
        secrets:
            - db_root_password
            - db_user
            - db_password
            - db_backup_user
            - db_backup_password
            - restic_password
            - STAGE_B2_ACCOUNT_ID
            - STAGE_B2_ACCOUNT_KEY
        

    ghost:
        image: "markdumay/ghost:latest"
        restart: unless-stopped
        links:
            - mariadb
        networks:
            - backend
            - frontend
        ports:
            - 2368:2368
        volumes:
            # make Ghost images, logs, settings, and themes persistent
            - ./data/ghost:/var/lib/ghost/content
            # add support for Docker secrets
            - ./config/ghost/db/connection.js:/var/lib/ghost/current/core/server/data/db/connection.js:ro
            # add nginx configuration templates and snippets
            - templates:/etc/nginx/templates
            - ./config/nginx/templates/ghost-${CACHING}.conf.template:/var/lib/nginx/templates/${DOMAINS_BLOG}.conf.template:ro
            - ./config/nginx/snippets:/var/lib/nginx/snippets:ro
        environment:
            # core ghost settings
            - url=https://${DOMAINS_BLOG}
            # - admin=https://${DOMAINS_ADMIN}
            - database__client=mysql
            - database__connection__host=mariadb
            - database__connection__database=${DB_NAME}
            - database__connection__user__file=/run/secrets/db_user
            - database__connection__password__file=/run/secrets/db_password
            # boot dependencies
            - WAIT_HOSTS=mariadb:3306
            - WAIT_SLEEP_INTERVAL=5
            - WAIT_HOSTS_TIMEOUT=300            
            # indicate wether the default Ghost theme (Casper) should be installed
            - THEMES=${THEMES}
            - CACHING=${CACHING}
            # notification settings
            # - mail__transport: SMTP
            # - mail__from: "Server <${ACME_EMAIL}>"
            # - mail__options__service: SMTP
            # - mail__options__host: mail
            # - mail__options__port: 25
        secrets:
            - db_user
            - db_password

    # TODO: add mail support

    # https://hub.docker.com/r/bytemark/smtp
    # mail:
    #     image: bytemark/smtp
    #     restart: unless-stopped
    #     networks:
    #         - frontend